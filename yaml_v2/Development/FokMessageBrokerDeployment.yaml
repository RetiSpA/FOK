apiVersion: apps/v1
kind: Deployment
metadata:
  name: fok-deployment-messagebroker
  labels:
    app: fok-messagebroker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fok-messagebroker
  template:
    metadata:
      labels:
        app: fok-messagebroker
    spec:
      containers:      
      - name: messagebroker
        image: caretro/foodonkontainers:broker_v0
        ports:
        - containerPort: 80
        env:
        - name: "ASPNETCORE_ENVIRONMENT"
          value: "Production"
      imagePullSecrets:
      - name: regcredcaretro

---
kind: Service
apiVersion: v1
metadata:  
  name: reti-lab-foodonkontainers-messagebroker
spec:
  type: NodePort
  selector:
    app: fok-messagebroker
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30082
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo
  name: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    name: mongo    
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo
  name: mongo-controller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        volumeMounts:
        - mountPath: /etc/mongo
          name: mongo-data
      restartPolicy: Always
      hostname: mongo
      volumes:
      - name: mongo-data
        persistentVolumeClaim:
          claimName: mongo-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: mongo-data
  name: mongo-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi